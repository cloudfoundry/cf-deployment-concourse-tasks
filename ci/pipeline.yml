resources:
- name: cf-deployment-concourse-tasks-dockerfile
  type: git
  icon: github
  source:
    branch: main
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    private_key: ((ard_wg_gitbot_ssh_key.private_key))
    paths:
    - dockerfiles/cf-deployment-concourse-tasks/Dockerfile

- name: bbl-github-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry
    repository: bosh-bootloader
    access_token: ((ard_wg_gitbot_token))

- name: bosh-cli-github-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry
    repository: bosh-cli
    access_token: ((ard_wg_gitbot_token))

- name: cf-cli-github-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry
    repository: cli
    access_token: ((ard_wg_gitbot_token))
    tag_filter: 'v(8\.[^v].*)'

- name: credhub-cli-github-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry-incubator
    repository: credhub-cli
    access_token: ((ard_wg_gitbot_token))

- name: log-cache-cli-github-release
  type: github-release
  icon: github
  source:
    user: cloudfoundry
    repository: log-cache-cli
    access_token: ((ard_wg_gitbot_token))

- name: terraform-github-release
  type: github-release
  icon: github
  source:
    user: hashicorp
    repository: terraform
    access_token: ((ard_wg_gitbot_token))

- name: yq-github-release
  type: github-release
  icon: github
  source:
    user: mikefarah
    repository: yq
    access_token: ((ard_wg_gitbot_token))

- name: uptimer
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/uptimer.git
    branch: main

- name: cf-deployment-concourse-tasks-pipeline-image
  type: docker-image
  icon: docker
  source:
    repository: cloudfoundry/cf-deployment-concourse-tasks
    username: ((dockerhub.username))
    password: ((dockerhub.password))
    email: cf-release-integration+dockerhub-push-bot@pivotal.io

- name: cf-deployment-concourse-tasks-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/cf-relint-ci-semver.git
    branch: main
    private_key: ((ard_wg_gitbot_ssh_key.private_key))
    file: cf-deployment-concourse-tasks-version

- name: cf-deployment-concourse-tasks
  type: git
  icon: github
  source:
    branch: main
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    private_key: ((ard_wg_gitbot_ssh_key.private_key))

- name: cf-deployment-concourse-tasks-latest-release
  type: git
  icon: github
  source:
    uri: git@github.com:cloudfoundry/cf-deployment-concourse-tasks.git
    private_key: ((ard_wg_gitbot_ssh_key.private_key))
    tag_filter: '*'

- name: cf-deployment-concourse-tasks-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-deployment-concourse-tasks
    access_token: ((ard_wg_gitbot_token))
    drafts: true

jobs:
- name: build-docker-image
  serial: true
  public: true
  plan:
  - in_parallel:
    - get: bbl-github-release
      trigger: true
    - get: bosh-cli-github-release
      trigger: true
    - get: cf-cli-github-release
      trigger: true
    - get: cf-deployment-concourse-tasks-dockerfile
      trigger: true
    - get: credhub-cli-github-release
      trigger: true
    - get: log-cache-cli-github-release
      trigger: true
    - get: terraform-github-release
      trigger: true
    - get: uptimer
      trigger: true
    - get: yq-github-release
      trigger: true
  - task: update-dockerfile-versions
    file: cf-deployment-concourse-tasks-dockerfile/ci/tasks/update-cf-d-ct-dockerfile-versions/task.yml
    input_mapping:
      cf-cli: cf-cli-github-release
      cf-deployment-concourse-tasks: cf-deployment-concourse-tasks-dockerfile
  - put: cf-deployment-concourse-tasks-pipeline-image
    params:
      build: cf-deployment-concourse-tasks-updated/dockerfiles/cf-deployment-concourse-tasks
      build_args:
        RELINT_CA_CERTIFICATE: ((relint_ca.certificate))
        PREVIOUS_RELINT_CA_CERTIFICATE: ""
      push: true
  - put: cf-deployment-concourse-tasks-dockerfile
    params:
      repository: cf-deployment-concourse-tasks-updated
      rebase: true

- name: ship-it-major
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks-version
      params:
        bump: major
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-latest-release
    - get: cf-deployment-concourse-tasks-pipeline-image
      params:
        save: true
      passed:
      - build-docker-image
  ## push to docker with a tagged version
  - task: generate-major-version-file
    file: cf-deployment-concourse-tasks/ci/tasks/generate-major-version-file/task.yml
    input_mapping:
      semantic_version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks-pipeline-image
    params:
      load: cf-deployment-concourse-tasks-pipeline-image
      tag_file: major_version/version
      tag_prefix: v
    get_params:
      save: true
  - put: cf-deployment-concourse-tasks-pipeline-image
    params:
      load: cf-deployment-concourse-tasks-pipeline-image
      tag_file: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
  ## update task yml to a updated dockerimage version and tag
  - task: update-docker-image-version-for-release
    file: cf-deployment-concourse-tasks/ci/tasks/bump-cf-d-ct-docker-image/task.yml
    input_mapping:
      version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks
    params:
      branch: main
      repository: cf-deployment-concourse-tasks-updated
      tag: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
  ## update task yml to point back to latest
  - task: update-docker-image-version-back-to-latest
    file: cf-deployment-concourse-tasks/ci/tasks/bump-cf-d-ct-docker-image/task.yml
    params:
      NEW_VERSION: latest
  - put: cf-deployment-concourse-tasks
    params:
      repository: cf-deployment-concourse-tasks-updated
      rebase: true
  - put: cf-deployment-concourse-tasks-version
    params:
      bump: major
  ## generate release notes and push draft release
  - task: generate-release-notes-template
    file: cf-deployment-concourse-tasks/ci/tasks/cf-decota-release-notes-template/task.yml
    input_mapping:
      release-version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks-github-release
    params:
      name: release-notes-template/name
      tag: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
      body: release-notes-template/template

- name: ship-it-minor
  public: true
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks-version
      params:
        bump: minor
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-concourse-tasks-latest-release
    - get: cf-deployment-concourse-tasks-pipeline-image
      params:
        save: true
      passed:
      - build-docker-image
  ## push to docker with a tagged version
  - task: generate-major-version-file
    file: cf-deployment-concourse-tasks/ci/tasks/generate-major-version-file/task.yml
    input_mapping:
      semantic_version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks-pipeline-image
    params:
      load: cf-deployment-concourse-tasks-pipeline-image
      tag_file: major_version/version
      tag_prefix: v
    get_params:
      save: true
  - put: cf-deployment-concourse-tasks-pipeline-image
    params:
      load: cf-deployment-concourse-tasks-pipeline-image
      tag_file: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
  ## update task yml to a updated dockerimage version and tag
  - task: update-docker-image-version-for-release
    file: cf-deployment-concourse-tasks/ci/tasks/bump-cf-d-ct-docker-image/task.yml
    input_mapping:
      version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks
    params:
      repository: cf-deployment-concourse-tasks-updated
      tag: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
  ## update task yml to point back to latest
  - task: update-docker-image-version-back-to-latest
    file: cf-deployment-concourse-tasks/ci/tasks/bump-cf-d-ct-docker-image/task.yml
    params:
      NEW_VERSION: latest
  - put: cf-deployment-concourse-tasks
    params:
      repository: cf-deployment-concourse-tasks-updated
      rebase: true
  - put: cf-deployment-concourse-tasks-version
    params:
      bump: minor
  ## generate release notes and push draft release
  - task: generate-release-notes-template
    file: cf-deployment-concourse-tasks/ci/tasks/cf-decota-release-notes-template/task.yml
    input_mapping:
      release-version: cf-deployment-concourse-tasks-version
  - put: cf-deployment-concourse-tasks-github-release
    params:
      name: release-notes-template/name
      tag: cf-deployment-concourse-tasks-version/version
      tag_prefix: v
      body: release-notes-template/template

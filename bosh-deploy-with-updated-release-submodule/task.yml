---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: v4.8.0

inputs:
- name: env-repo  # - The env repo containing the Director's bbl state dir
- name: cf-deployment  # - The cf-deployment manifest
- name: vars-store  # - The BOSH deployment's vars-store yaml file
- name: ops-files  # - Operations files to be made available
- name: vars-files  # - Variable files to be made available
- name: release
# - BOSH release source repo
# - A dev release will be created from this repo and used in the deployment
- name: cf-deployment-concourse-tasks  # - This repo
- name: submodule  # - The resource that will be placed at the BUMP_SUBMODULE path

outputs:
- name: updated-vars-store
# - The vars-store resource, with changes git committed,
#   ready to be `put` to a git resource.

run:
  path: cf-deployment-concourse-tasks/bosh-deploy-with-updated-release-submodule/task

params:
  BBL_STATE_DIR: bbl-state
  # - Path to the directory containing the `bbl-state.json` file
  # - The path is relative to the `env-repo` input
  # - If blank or '.', uses `env-repo` input as the location for bbl state
  # - If the specified path does not exist, it will be created

  MANIFEST_FILE: cf-deployment.yml
  # - Required
  # - Filepath to the manifest file within the cf-deployment resource
  # - The path is relative to root of the `cf-deployment` input

  VARS_STORE_FILE: deployment-vars.yml
  # - Required
  # - Filepath to the BOSH deployment vars-store yaml file
  # - The path is relative to root of the `vars-store` input

  USE_VARS_STORE: true
  # - Required
  # - Should use a file based vars-store, if set to false will
  # - use credhub.

  SYSTEM_DOMAIN:
  # - Required
  # - CF system base domain e.g. `my-cf.com`

  OPS_FILES:
  # - Optional
  # - List of operations files to be applied to the manifest
  # - Quoted and space-separated
  # - Ops will be applied in the order they're listed
  # - Paths are relative to root of the `ops-files` input

  VARS_FILES:
  # - Optional
  # - List of variable files to be applied to the manifest
  # - Quoted and space-separated
  # - Variable files will be applied in the order they're listed
  # - Paths are relative to root of the `vars-files` input
  # - Different from VARS_STORE_FILE in that these values
  #   are interpolated with `-l`
  #   and will never be generated by the BOSH CLI.

  REGENERATE_VARS_STORE: false
  # - Required
  # - Remove the ${VARS_STORE_FILE} before running `bosh deploy`
  # - This allows the vars to be freshly generated each time
  # - This is helpful for testing changes around variable generation
  # - Works well with fresh deployments
  # - Upgrade deployments are not expected to work with total cred rotation

  GIT_COMMIT_EMAIL:
  GIT_COMMIT_USERNAME:
  # - Optional
  # - You may choose the git committer
  #   username and email address by setting these
  # - If you leave them blank, they are set to 'CI Bot'
  #   and 'cf-release-integration@pivotal.io', respectively

  BUMP_SUBMODULE: ""
  # - Required
  # - Set to the path of a submodule you want bumped
  #   prior to creating the dev release.

  DEPLOY_WITH_UPTIME_MEASUREMENTS: false
  # - Optional
  # - This will measure uptime during the bosh deploy task using [uptimer](https://github.com/cloudfoundry/uptimer)

  FAIL_ON_DOWNTIME: false
  # - Optional
  # - This will cause the task to fail if you are not using the DEPLOY_WITH_UPTIME_MEASUREMENTS flag
  # - It will cause the concourse task to fail if you do not have perfect uptime

  # AWS Configuration Params
  # - Required for AWS
  #   if environment was created with bbl up --credhub
  # - Absent the `--credhub` flag,
  #   the IaaS credentials are instead stored in the bbl_state.json,
  #   so these are unnecessary.
  BBL_AWS_ACCESS_KEY_ID:
  BBL_AWS_SECRET_ACCESS_KEY:

  # GCP Configuration Params
  # - Required for GCP
  #   if environment was created with bbl up --credhub
  # - Absent the `--credhub` flag,
  #   the IaaS credentials are instead stored in the bbl_state.json,
  #   so these are unnecessary.
  BBL_GCP_SERVICE_ACCOUNT_KEY:
  # - Key content or path to the file containing credentials downloaded from GCP
  # - Path is relative to the BBL_STATE_DIR specified a

---
platform: linux

image_resource:
  type: registry-image
  source:
    repository: cloudfoundry/cf-deployment-concourse-tasks
    tag: latest

inputs:
- name: bbl-state  # - The repo containing the Director's bbl state dir
  optional: true
- name: toolsmiths-env  # - Directory containing Toolsmiths metadata file
  optional: true
- name: cf-deployment  # - The cf-deployment manifest
- name: ops-files  # - Operations files to be made available
  optional: true
- name: vars-files  # - Variable files to be made available
  optional: true
- name: release
# - BOSH release source repo
# - A dev release will be created from this repo and used in the deployment
- name: cf-deployment-concourse-tasks  # - This repo
- name: submodule  # - The resource that will be placed at the BUMP_SUBMODULE path

run:
  path: cf-deployment-concourse-tasks/bosh-deploy-with-updated-release-submodule/task

params:
  BBL_STATE_DIR: bbl-state
  # - Path to the directory containing the `bbl-state.json` file
  # - The path is relative to the `bbl-state` input
  # - If blank or '.', uses `bbl-state` input as the location for bbl state
  # - If the specified path does not exist, it will be created
  # - This input and parameter will be ignored if toolsmiths-env is provided

  MANIFEST_FILE: cf-deployment.yml
  # - Required
  # - Filepath to the manifest file within the cf-deployment resource
  # - The path is relative to root of the `cf-deployment` input

  SYSTEM_DOMAIN:
  # - Required unless toolsmiths-env optional input is provided
  # - CF system base domain e.g. `my-cf.com`

  OPS_FILES:
  # - Optional
  # - List of operations files to be applied to the manifest
  # - Quoted and space-separated
  # - Ops will be applied in the order they're listed
  # - Paths are relative to root of the `ops-files` input

  VARS_FILES:
  # - Optional
  # - List of variable files to be applied to the manifest
  # - Quoted and space-separated
  # - Variable files will be applied in the order they're listed
  # - Paths are relative to root of the `vars-files` input

  REGENERATE_CREDENTIALS: false
  # - Optional
  # - Delete credentials associated with this deployment from CredHub
  # - This allows the credentials to be freshly generated each time
  # - This is helpful for testing changes around variable generation
  # - Works well with fresh deployments
  # - Upgrade deployments are not expected to work with total cred rotation

  BUMP_SUBMODULE: ""
  # - Required
  # - Set to the path of a submodule you want bumped
  #   prior to creating the dev release.

  DEPLOY_WITH_UPTIME_MEASUREMENTS: false
  # - Optional
  # - This will measure uptime during the bosh deploy task using [uptimer](https://github.com/cloudfoundry/uptimer)

  FAIL_ON_DOWNTIME: false
  # - Optional
  # - This will cause the task to fail if you are not using the DEPLOY_WITH_UPTIME_MEASUREMENTS flag
  # - It will cause the concourse task to fail if you do not have perfect uptime

  MEASURE_SYSLOG_AVAILABILITY: false
  # - Optional
  # - Requires DEPLOY_WITH_UPTIME_MEASUREMENTS to be true.
  # - This will measure availability of app syslog drain during deployment.

  MEASURE_TCP_AVAILABILITY: false
  # - Optional
  # - Requires DEPLOY_WITH_UPTIME_MEASUREMENTS to be true.
  # - This will measure availability of TCP routing during deployment.

  TCP_DOMAIN:
  # - Required if MEASURE_TCP_AVAILABILITY or MEASURE_SYSLOG_AVAILABILITY is set to true,
  #   unless toolsmiths-env is provided. With toolsmiths-env, this value is automatically calculated.
  # - Domain used by CF for creating tcp routes to apps, syslog.
  # - Usually of the form `tcp.[SYSTEM_DOMAIN]` (e.g. `tcp.my-cf.com`).

  TCP_PORT:
  # - Required if MEASURE_TCP_AVAILABILITY is set to true.
  # - Available port within the 'reservable_ports' range,
  # - used to create a tcp route for TCP routing availability measurement.


  AVAILABLE_PORT:
  # - Required if MEASURE_SYSLOG_AVAILABILITY is set to true.
  # - Available port within the 'reservable_ports' range,
  # - used to create a tcp route for the syslog availability measurement.

  APP_PUSHABILITY_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for app pushability
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  HTTP_AVAILABILITY_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for http availability
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  TCP_AVAILABILITY_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for tcp availability
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  RECENT_LOGS_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for recent logs
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  STREAMING_LOGS_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for streaming logs
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  APP_SYSLOG_AVAILABILITY_THRESHOLD: 0
  # - Optional
  # - This sets the maximum number of allowed uptimer failures for app syslog availability
  # - The default threshold value of 0 is our working value for cf-deployment, and is likely to be updated

  USE_SINGLE_APP_INSTANCE: false
  # - Optional
  # - Configures uptimer to deploy with a single app instance rather than two.
  # - This is primarily used by Diego to validate new uptime features.

  BOSH_DEPLOY_ARGS:
  # - Optional
  # - Supplies additional arguments to the bosh deploy command
  # - For example, '--recreate'

  BOSH_LITE: false
  # - Optional
  # - Used to determine whether we should upload a warden stemcell
  # - Boolean

#!/bin/bash
set -xeu

build_dir=${PWD}

if [[ -d "${build_dir}/cf-cli" ]]; then
  echo "Setting PATH so that input cf-cli is found by CATs..."

  version=$(cat "${build_dir}/cf-cli/version")
  curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${version:1}&source=github-rel" | tar -zx

  mv "${build_dir}/cf8" /usr/local/bin/cf
  echo "Using provided cf CLI version"
  cf -v
fi

export CONFIG
CONFIG=$(mktemp)

original_config="${build_dir}/integration-config/${CONFIG_FILE_PATH}"
reporter_config="${build_dir}/integration-config/${REPORTER_CONFIG_FILE_PATH}"

if ${CAPTURE_LOGS}; then
  jq ".artifacts_directory=\"${build_dir}/cats-trace-output\"" ${original_config} > ${CONFIG}
else
  cp ${original_config} ${CONFIG}
fi

if [ -f ${reporter_config} ]; then
  echo "Configuring Honeycomb integration..."
  set +x
  reporter_config_value="$(cat ${reporter_config})"
  combined_config_value="$(cat ${CONFIG} | jq --argjson reporter "$reporter_config_value" '. + $reporter')"

  pushd "${build_dir}/cf-acceptance-tests"
    combined_config_value="$(echo ${combined_config_value} | jq ".reporter_config.custom_tags.cats_git_sha=\"$(git rev-parse HEAD)\"" )"
    combined_config_value="$(echo ${combined_config_value} | jq ".reporter_config.custom_tags.cf_cli_version=\"$(cf -v | awk '{print $3}')\"" )"
  popd

  echo "$combined_config_value" > ${CONFIG}
  set -x
fi

CF_GOPATH=/go/src/github.com/cloudfoundry/

echo "Moving cf-acceptance-tests onto the gopath..."
mkdir -p $CF_GOPATH
cp -R cf-acceptance-tests $CF_GOPATH

cd /go/src/github.com/cloudfoundry/cf-acceptance-tests

export CF_DIAL_TIMEOUT=11

export CF_PLUGIN_HOME=$HOME

./bin/test \
  --keep-going \
  --randomize-all \
  --skip-package=helpers \
  --nodes="${NODES}" \
  --skip="${SKIP_REGEXP}" \
  --flake-attempts=${FLAKE_ATTEMPTS} \
  --timeout="${TIMEOUT}" \
  --no-color
